name: Deploy builds (beta)

on:
  # Runs on pushes targeting the default branch
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: false

jobs:

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - Android
          - iOS
    steps:

      # Checkout
      - uses: actions/checkout@v4
        with:
          lfs: true

      # Delete library folder (if existing) before retrieving new library folder from cache
      - name: Delete library folder
        run: rm -rf Library

      # Cache
      - uses: JackSinkoRB/local-cache@main
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}

      # Build
      - uses: game-ci/unity-builder@v4
        id: buildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          dockerMemoryLimit: 7500m
          dockerCpuLimit: 2
          buildName: 'Gumball'

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      # Delete build folder to save space
      - name: Delete build folder
        run: rm -rf build

  cleanup:
    needs: build
    name: Cleanup
    runs-on: self-hosted
    strategy:
      fail-fast: false
    env:
      LIBRARY_PATH: ${{ format('{0}/Library', github.workspace) }}

    steps:
      - name: Check if library folder exists
        run: |
          if [ ! -d "$LIBRARY_PATH" ]; then
            echo "::warning file=cleanup::Library directory does not exist at $LIBRARY_PATH"
          else
            rm -rf $LIBRARY_PATH
          fi

  deployToApple:
    needs: build
    name: Deploy to TestFlight
    runs-on: macos-latest
    steps:

      # Checkout
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download IOS artifact
        uses: actions/download-artifact@v4
        with:
          name: build-iOS
          path: build/iOS

      - name: Fix File Permissions and Run fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          IOS_BUNDLE_ID: com.company.application # Change it to match your Unity bundle id
          PROJECT_NAME: Your Project Name # Change it to match your project's name
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          find $IOS_BUILD_PATH -type f -iname "usymtool" -exec chmod +x {} \;
          bundle install
          bundle exec fastlane ios beta

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build-iOS

  deployToGoogle:
    needs: build
    name: Deploy to Google Play internal track
    runs-on: self-hosted
    steps:

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build-Android