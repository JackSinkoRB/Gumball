name: Test and build all platforms

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    name: Setup
    runs-on: self-hosted

    steps:
      # Ensure Git LFS is installed
      - name: Install Git LFS
        run: sudo apt-get update && sudo apt-get install git-lfs

      # Ensure Docker is installed
      - name: Install Docker
        run: sudo apt-get update && sudo apt-get install -y docker.io

      # Ensure Git is installed
      - name: Install Git
        run: sudo apt-get update && sudo apt-get install git

  testAllModes:
    needs: setup
    name: Test in ${{ matrix.testMode }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
    steps:

      # Checkout
      - uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: maxnowack/local-cache@v1
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Test
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          customParameters: -nographics
          dockerMemoryLimit: 7500m
          dockerCpuLimit: 2

      # Output
      #- uses: actions/upload-artifact@v4
      #  if: always()
      #  with:
      #    name: Test results for ${{ matrix.testMode }}
      #    path: ${{ matrix.testMode }}-artifacts

  build:
    needs: testAllModes
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - Android
          - StandaloneWindows
    steps:

      # Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Cache
      - uses: maxnowack/local-cache@v1
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      #- if: matrix.targetPlatform == 'Android'
      #  uses: jlumbroso/free-disk-space@v1.3.1

      # Build
      - uses: game-ci/unity-builder@v4
        id: buildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          dockerMemoryLimit: 7500m
          dockerCpuLimit: 2
          buildName: 'Gumball'

      # Zip Build Files
      - name: Zip Build Files
        run: zip -r Gumball-${{ matrix.targetPlatform }}.zip build/${{ matrix.targetPlatform }}

      # Move Build Files
      - name: Move Build Files
        run: mv Gumball-${{ matrix.targetPlatform }}.zip /var/www/html

      # Output
      #- uses: actions/upload-artifact@v4
      #  with:
      #    name: Build-${{ matrix.targetPlatform }}
      #    path: build/${{ matrix.targetPlatform }}
      #    if-no-files-found: error

  deploy:
    needs: build
    name: Deploy
    runs-on: self-hosted
    steps:

      # Get short commit hash
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7

      # Send Discord notification
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: '[{ "title":"Gumball has a new build available.", "fields": [
          { "name": "Android", "value": "[Download](http://178.16.143.69/Gumball-Android.zip)", "inline": true },
          { "name": "Windows", "value": "[Download](http://178.16.143.69/Gumball-StandaloneWindows.zip)", "inline": true },
          { "name": "Last commit", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - *${{github.event.head_commit.message}}*" }]
          , "footer":{"text":"Committed by ${{github.event.head_commit.author.name}}"} }]'
        uses: Ilshidur/action-discord@0.3.2